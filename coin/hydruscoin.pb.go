// Code generated by protoc-gen-go.
// source: hydruscoin.proto
// DO NOT EDIT!

/*
Package coin is a generated protocol buffer package.

It is generated from these files:
	hydruscoin.proto

It has these top-level messages:
	Account
	TX
	ExecResult
	QueryAddrResults
	HydruscoinInfo
*/
package coin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// account model digitalAssets
type Account struct {
	Addr    string               `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Balance uint64               `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
	Txouts  map[string]*TX_TXOUT `protobuf:"bytes,3,rep,name=txouts" json:"txouts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetTxouts() map[string]*TX_TXOUT {
	if m != nil {
		return m.Txouts
	}
	return nil
}

// utxo tx
type TX struct {
	Version   uint64      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Timestamp int64       `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Txin      []*TX_TXIN  `protobuf:"bytes,3,rep,name=txin" json:"txin,omitempty"`
	Txout     []*TX_TXOUT `protobuf:"bytes,4,rep,name=txout" json:"txout,omitempty"`
	Founder   string      `protobuf:"bytes,5,opt,name=founder" json:"founder,omitempty"`
	Coinbase  bool        `protobuf:"varint,6,opt,name=coinbase" json:"coinbase,omitempty"`
}

func (m *TX) Reset()                    { *m = TX{} }
func (m *TX) String() string            { return proto.CompactTextString(m) }
func (*TX) ProtoMessage()               {}
func (*TX) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TX) GetTxin() []*TX_TXIN {
	if m != nil {
		return m.Txin
	}
	return nil
}

func (m *TX) GetTxout() []*TX_TXOUT {
	if m != nil {
		return m.Txout
	}
	return nil
}

// txin not specified who has this txin, because creator can use their txout only, txin must be creator's previous txout
type TX_TXIN struct {
	Ix         uint32 `protobuf:"varint,1,opt,name=ix" json:"ix,omitempty"`
	SourceHash string `protobuf:"bytes,2,opt,name=sourceHash" json:"sourceHash,omitempty"`
}

func (m *TX_TXIN) Reset()                    { *m = TX_TXIN{} }
func (m *TX_TXIN) String() string            { return proto.CompactTextString(m) }
func (*TX_TXIN) ProtoMessage()               {}
func (*TX_TXIN) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type TX_TXOUT struct {
	Value uint64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Addr  string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	Until int64  `protobuf:"varint,3,opt,name=until" json:"until,omitempty"`
}

func (m *TX_TXOUT) Reset()                    { *m = TX_TXOUT{} }
func (m *TX_TXOUT) String() string            { return proto.CompactTextString(m) }
func (*TX_TXOUT) ProtoMessage()               {}
func (*TX_TXOUT) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

// ExecResult is the result of processing a transaction
type ExecResult struct {
	SumCurrentOutputs uint64 `protobuf:"varint,1,opt,name=sumCurrentOutputs" json:"sumCurrentOutputs,omitempty"`
	SumPriorOutputs   uint64 `protobuf:"varint,2,opt,name=sumPriorOutputs" json:"sumPriorOutputs,omitempty"`
	IsCoinbase        bool   `protobuf:"varint,3,opt,name=isCoinbase" json:"isCoinbase,omitempty"`
}

func (m *ExecResult) Reset()                    { *m = ExecResult{} }
func (m *ExecResult) String() string            { return proto.CompactTextString(m) }
func (*ExecResult) ProtoMessage()               {}
func (*ExecResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// QueryAddrResults returns the result of query function query_addr
type QueryAddrResults struct {
	Accounts map[string]*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *QueryAddrResults) Reset()                    { *m = QueryAddrResults{} }
func (m *QueryAddrResults) String() string            { return proto.CompactTextString(m) }
func (*QueryAddrResults) ProtoMessage()               {}
func (*QueryAddrResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *QueryAddrResults) GetAccounts() map[string]*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// HydruscoinInfo
type HydruscoinInfo struct {
	CoinTotal    uint64 `protobuf:"varint,1,opt,name=coinTotal" json:"coinTotal,omitempty"`
	AccountTotal uint64 `protobuf:"varint,2,opt,name=accountTotal" json:"accountTotal,omitempty"`
	TxoutTotal   uint64 `protobuf:"varint,3,opt,name=txoutTotal" json:"txoutTotal,omitempty"`
	TxTotal      uint64 `protobuf:"varint,4,opt,name=txTotal" json:"txTotal,omitempty"`
	// when you init, you put other valiables into 0, so message bytes will be nil, can't be put into states
	Placeholder string `protobuf:"bytes,5,opt,name=placeholder" json:"placeholder,omitempty"`
}

func (m *HydruscoinInfo) Reset()                    { *m = HydruscoinInfo{} }
func (m *HydruscoinInfo) String() string            { return proto.CompactTextString(m) }
func (*HydruscoinInfo) ProtoMessage()               {}
func (*HydruscoinInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*Account)(nil), "coin.Account")
	proto.RegisterType((*TX)(nil), "coin.TX")
	proto.RegisterType((*TX_TXIN)(nil), "coin.TX.TXIN")
	proto.RegisterType((*TX_TXOUT)(nil), "coin.TX.TXOUT")
	proto.RegisterType((*ExecResult)(nil), "coin.ExecResult")
	proto.RegisterType((*QueryAddrResults)(nil), "coin.QueryAddrResults")
	proto.RegisterType((*HydruscoinInfo)(nil), "coin.HydruscoinInfo")
}

func init() { proto.RegisterFile("hydruscoin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x92, 0xdf, 0x6a, 0xdb, 0x30,
	0x14, 0xc6, 0x71, 0xac, 0xa4, 0xc9, 0x71, 0xdd, 0xa6, 0xda, 0x60, 0x6e, 0xb6, 0x41, 0x09, 0x63,
	0x74, 0x37, 0xb9, 0x68, 0x61, 0x8c, 0xc1, 0x06, 0xa5, 0x14, 0xda, 0x9b, 0x75, 0x1b, 0x1e, 0xf4,
	0x56, 0x71, 0x54, 0x22, 0xe6, 0x48, 0x41, 0x7f, 0x8a, 0xf3, 0x0a, 0xbb, 0xdc, 0x33, 0xee, 0x41,
	0x26, 0x1d, 0xd9, 0xa1, 0x09, 0xf8, 0xc2, 0xfa, 0x8e, 0xf4, 0xe9, 0xa7, 0xf3, 0x1d, 0x18, 0x2f,
	0x37, 0x0b, 0xed, 0x4c, 0xa5, 0x84, 0x9c, 0xad, 0xb5, 0xb2, 0x8a, 0x92, 0xf0, 0x3f, 0xfd, 0x9b,
	0xc0, 0xc1, 0x55, 0x55, 0x29, 0x27, 0x2d, 0x3d, 0x04, 0xc2, 0x16, 0x0b, 0x5d, 0x24, 0x67, 0xc9,
	0xf9, 0x88, 0x1e, 0xc3, 0xc1, 0x9c, 0xd5, 0x4c, 0x56, 0xbc, 0xe8, 0x79, 0x81, 0xd0, 0x0f, 0x30,
	0xb0, 0x8d, 0x72, 0xd6, 0x14, 0xe9, 0x59, 0x7a, 0x9e, 0x5d, 0x9c, 0xce, 0xd0, 0xad, 0x3d, 0x3d,
	0x2b, 0xb1, 0x76, 0x23, 0xad, 0xde, 0x4c, 0xbe, 0x40, 0xf6, 0x6c, 0x49, 0x33, 0x48, 0x7f, 0xf3,
	0x4d, 0xeb, 0xfb, 0x16, 0xfa, 0x4f, 0xac, 0x76, 0xd1, 0x35, 0xbb, 0x38, 0x8a, 0x2e, 0xe5, 0x83,
	0xff, 0xee, 0x7f, 0x95, 0x9f, 0x7b, 0x9f, 0x92, 0xe9, 0xbf, 0x04, 0x7a, 0xe5, 0x43, 0x20, 0x78,
	0xe2, 0xda, 0x08, 0x25, 0xf1, 0x28, 0xa1, 0x27, 0x30, 0xb2, 0x62, 0xc5, 0x8d, 0x65, 0xab, 0x35,
	0x1e, 0x4f, 0xe9, 0x6b, 0x20, 0xb6, 0x11, 0xb2, 0x45, 0xca, 0x9f, 0x99, 0xdd, 0x7d, 0x0b, 0x57,
	0x21, 0x71, 0x41, 0xb0, 0xba, 0x77, 0x55, 0xf0, 0x7f, 0xf4, 0xe8, 0x0b, 0xae, 0x8b, 0x3e, 0xa2,
	0x8d, 0x61, 0x18, 0x76, 0xcc, 0x99, 0xe1, 0xc5, 0xc0, 0x2b, 0xc3, 0xc9, 0x7b, 0x20, 0xe8, 0x04,
	0xd0, 0x13, 0x0d, 0x52, 0xe4, 0xd4, 0x2f, 0x8c, 0x72, 0xba, 0xe2, 0xb7, 0xcc, 0x2c, 0x11, 0x63,
	0x34, 0xb9, 0x84, 0x7e, 0xf4, 0xcc, 0xbb, 0xd7, 0x45, 0xe2, 0xae, 0xa5, 0xb8, 0x2b, 0x14, 0x7d,
	0xa7, 0x44, 0xed, 0x69, 0x3d, 0xfb, 0xb4, 0x04, 0xb8, 0x69, 0x78, 0xf5, 0x93, 0x1b, 0x57, 0x5b,
	0x7a, 0x0a, 0x27, 0xc6, 0xad, 0xae, 0x9d, 0xd6, 0x5c, 0xda, 0x7b, 0x67, 0xd7, 0xa1, 0xd3, 0xd1,
	0xe5, 0x15, 0x1c, 0xfb, 0xd2, 0x77, 0x2d, 0x94, 0xee, 0x0a, 0x31, 0x12, 0x8f, 0x22, 0xcc, 0x75,
	0x87, 0x1c, 0x5c, 0x87, 0xd3, 0x3f, 0x09, 0x8c, 0x7f, 0x38, 0xae, 0x37, 0x57, 0xfe, 0xe2, 0xe8,
	0x6d, 0xe8, 0x47, 0x18, 0xb2, 0x98, 0x53, 0xf0, 0x0c, 0xcd, 0x78, 0x17, 0x9b, 0xb1, 0xbf, 0xb3,
	0x8b, 0xb3, 0x0d, 0xf2, 0x2b, 0xe4, 0x3b, 0xc2, 0x6e, 0x94, 0x6f, 0x76, 0xa3, 0xcc, 0x77, 0x06,
	0x02, 0x93, 0x34, 0x70, 0x74, 0xbb, 0x1d, 0xbc, 0x3b, 0xf9, 0xa8, 0x42, 0x86, 0xe1, 0xbf, 0x54,
	0x96, 0xd5, 0xed, 0xf3, 0x5e, 0xc2, 0x61, 0x0b, 0x17, 0xd5, 0xed, 0xdb, 0x30, 0xbc, 0xa8, 0xa5,
	0xa8, 0xf9, 0xc4, 0x6c, 0x13, 0x05, 0x82, 0xc2, 0x0b, 0xc8, 0xd6, 0x35, 0xab, 0xf8, 0x52, 0xd5,
	0xdb, 0x18, 0xe7, 0x03, 0x1c, 0xf0, 0xcb, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe0, 0xc8, 0x64,
	0xfa, 0xf4, 0x02, 0x00, 0x00,
}
